# Often, you'll have a class of files that you don't want Git to automatically
# add or even show you as being untracked. These are generally automatically
# generated files such as log files or files produced by your build system.
# In such cases, you can create a file listing patterns to match them
# named `.gitignore`.

# The rules for the patterns you can put in the .gitignore file are as follows:
#
#   * Blank lines or lines starting with # are ignored.
#   * Standard glob patterns work, and will be applied recursively throughout
#     the entire working tree.
#   * You can start patterns with a forward slash (/) to avoid recursivity.
#   * You can end patterns with a forward slash (/) to specify a directory.
#   * You can negate a pattern by starting it with an exclamation point (!).

# Glob patterns are like simplified regular expressions that shells use.
# An asterisk (*) matches zero or more characters; [abc] matches any character
# inside the brackets (in this case a, b, or c); a question mark (?) matches a
# single character; and brackets enclosing characters separated by a hyphen
# ([0-9]) matches any character between them (in this case 0 through 9).
# You can also use two asterisks to match nested directories; a/**/z would match
# a/z, a/b/z, a/b/c/z, and so on.

# In the simple case, a repository might have a single `.gitignore` file in its
# root directory, which applies recursively to the entire repository. However,
# it is also possible to have additional `.gitignore` files in subdirectories.
# The rules in these nested `.gitignore` files apply only to the files under
# the directory where they are located.
# See `man gitignore` for the details.

# It's good to know that GitHub maintains a fairly comprehensive list of good
# `.gitignore` file examples for dozens of projects and languages at
# https://github.com/github/gitignore.

# Ignore all `.a` files...
*.a

# but do track `lib.a`, even though you're ignoring `.a` files above.
!lib.a

# Only ignore the `TODO` file in the current directory, not `subdir/TODO`.
/TODO

# Ignore all files in any directory named `build`.
build/

# Ignore `doc/notes.txt`, but not `doc/server/arch.txt`.
doc/*.txt

# Ignore all `.pdf` files in the `doc/` directory and any of its
# subdirectories.
doc/**/*.pdf
